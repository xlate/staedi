name: Build

on:
  push:
    branches:
      - master
    tags:
      - '**'
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - '*.png'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
      - '*.png'

jobs:
  build:
    strategy:
      matrix:
        java: [ 8, 11, 17, 21 ]
        os: [ ubuntu-latest, windows-latest ]
    name: "Build with JDK ${{matrix.java}} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    steps:
      ## - name: Display Github Event Context
      ##   run: echo "$GITHUB_CONTEXT"
      ##   env:
      ##     GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{matrix.java}}

      - name: Setup Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: m2-repository-${{ hashFiles('**/pom.xml') }}
  
      - name: Maven Build
        run: mvn -B verify

      ## Save the context information for use in Sonar analysis
      - name: Save Build Context
        if: ${{ matrix.java == '17' && matrix.os == 'ubuntu-latest' }}
        run: echo "$GITHUB_CONTEXT" > target/build-context.json
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      ## Attach the target directory for use in Sonar analysis
      - name: Attach Build Output
        if: ${{ matrix.java == '17' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: target/

  javadoc:
    runs-on: ubuntu-latest
    name: Verify JavaDocs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: m2-repository-${{ hashFiles('**/pom.xml') }}

      - name: Generate JavaDocs
        run: mvn -B package javadoc:javadoc -DskipTests
